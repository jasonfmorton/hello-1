name: publish

on:  
  push:
    tags:
      - 'v*.*.*'

env:
  # there is nothing secret really here so don't bother with changing this GHA secret
  KEY: gcpkms://projects/cloudy-demos/locations/us-west1/keyRings/github-actions/cryptoKeys/signer/cryptoKeyVersions/1
  REG: us-west1-docker.pkg.dev
  
jobs:

  # this will unit test, lint, and scan for vulnerabilities 
  test:
    uses: ./.github/workflows/test-on-call.yaml
    secrets:
      token: ${{ secrets.SNYK_TOKEN }}

  push:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      id-token: write
    # TODO: implement outputs in the ko publish steps
    # outputs:
    #   app: ${{ steps.pub-app.outputs.sha }}
    #   worker: ${{ steps.pub-worker.outputs.sha }}
    steps:

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.19.4'
    - run: go version

    - name: Cache Go Modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Tidy Modules
      run: |
        make tidy

    - name: Capture Variables
      run: |
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      
    - id: auth
      name: Get GCP token
      uses: google-github-actions/auth@v1
      with:
          token_format: "access_token"
          # some may consider project number and service account name to be private, 
          # move to GHA secrets if that's the case.
          workload_identity_provider: projects/799736955886/locations/global/workloadIdentityPools/github-pool/providers/github-provider
          service_account: github-actions-user@cloudy-demos.iam.gserviceaccount.com

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          us-west1-docker.pkg.dev/cloudy-demos/hello-gha/hello
        tags: |
          type=sha,enable=true,format=long,priority=9999
          type=raw,enable=true,value=${{ env.RELEASE_VERSION }}
          type=raw,enable=true,value=${{ env.GITHUB_SHA }}

    - name: Docker login
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REG }}
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}
  
    - name: Image build and push
      id: push
      uses: docker/build-push-action@v3
      with:
        platforms: linux/amd64
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Install Cosign
      uses: sigstore/cosign-installer@main
      with:
        cosign-release: 'v1.13.1'

    - name: Login With cosign
      run: |
        cosign version
        cosign login us-west1-docker.pkg.dev --username=oauth2accesstoken --password=${{ steps.auth.outputs.access_token }}

    - name: Get KMS Key
      run: |
        cosign generate-key-pair --kms ${{ env.KEY }}
      
    - name: Sign image
      run: |
        cosign sign --force --key ${{ env.KEY }} ${TAGS}
      env:
        TAGS: ${{ steps.meta.outputs.tags }}
        COSIGN_PASSWORD: ${{ steps.auth.outputs.access_token }}

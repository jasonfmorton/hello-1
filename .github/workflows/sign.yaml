name: sign

on:
  workflow_call:
    secrets:
      registry:
        required: true
      id_provider:
        required: true
      service_account:
        required: true
      key:
        required: true
      cosign_version:
        required: false
    inputs:
      digest:
        description: "Fully qualified image digest (from reg to sha)"
        required: true
        type: string

jobs:

  sign:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
   
    steps:
   
    - name: Print Digest
      run: |
        echo "${{ inputs.digest }}"
    
    - id: auth
      name: Get GCP token
      uses: google-github-actions/auth@v1
      with:
          token_format: "access_token"
          workload_identity_provider: ${{ secrets.id_provider }}
          service_account: ${{ secrets.service_account }}
    
    - name: Install Cosign
      uses: sigstore/cosign-installer@main
      with:
        cosign-release: ${{ secrets.cosign_version }}
    
    - name: Auth Cosign
      run: |
        cosign version
        cosign login ${{ secrets.registry }} --username=oauth2accesstoken --password=${{ steps.auth.outputs.access_token }}
    
    - name: Get KMS Key
      run: |
        cosign generate-key-pair --kms ${{ secrets.key }}
    
    - name: Sign Image
      run: |
        cosign sign --force --key ${{ secrets.key }} ${{ inputs.digest }}
      env:
        COSIGN_PASSWORD: ${{ steps.auth.outputs.access_token }}

    - name: Gen SBOM
      uses: anchore/sbom-action@v0
      with:
        image: ${{ inputs.digest }}
        registry-username: oauth2accesstoken
        registry-password: ${{ steps.auth.outputs.access_token }}
        artifact-name: sbom.spdx.json
        format: spdx-json

    - name: Attest SBOM
      run: |
        cosign attest --predicate sbom.spdx.json --key ${{ secrets.key }} ${{ inputs.digest }}
      env:
        COSIGN_PASSWORD: ${{ steps.auth.outputs.access_token }}

    - name: Download Vulnerability Scanner
      uses: anchore/scan-action/download-grype@v3
      id: grype

    - name: Scan SBOM
      run: |
        ${{steps.grype.outputs.cmd}} --add-cpes-if-none sbom:sbom.spdx.json -o json > vulns.grype.json
      

# WORK IN PROGRESS
# Overview: release via Google Cloud Deploy for GKE
# Requires git commit triggering to populate COMMIT_SHA variable

substitutions:
  _APP_NAME: hello
  _PIPELINE_NAME: demo-pipeline
  _POOL_NAME: demo-pool

steps:
  # Go test
  - name: golang:1.19
    id: test
    env:
      - GO111MODULE=on
    entrypoint: /bin/bash
    args: ["-c", "make test"]
        
  # Build image
  - name: gcr.io/cloud-builders/docker
    id: build
    args: ['build', '-t', '${LOCATION}-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$_APP_NAME:$COMMIT_SHA', '.']
  
  # Publish image, get sha256
  - name: gcr.io/cloud-builders/docker
    entrypoint: /bin/bash
    env:
    - '_IMAGE_TAG=${LOCATION}-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$_APP_NAME:$COMMIT_SHA'
    args:
    - -c
    - |
      docker push $_IMAGE_TAG &&
      docker image inspect $_IMAGE_TAG --format '{{index .RepoDigests 0}}' > image-digest.txt && 
      cat image-digest.txt
    id: publish

  # Test against my vulnerability policy
  - name: gcr.io/$PROJECT_ID/kritis-signer
    id: vulnsign
    entrypoint: /bin/bash
    args:
    - -c
    - |
      /kritis/signer \
      -v=10 \
      -alsologtostderr \
      -image=$(/bin/cat image-digest.txt) \
      -policy=./policy/kritis/vulnz-signing-policy.yaml \
      -kms_key_name=${_KMS_KEY_NAME} \
      -kms_digest_alg=${_KMS_DIGEST_ALG} \
      -note_name=${_NOTE_NAME}
    waitFor: ['publish']
    

  # Create release in Google Cloud Deploy
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: /bin/bash
    args:
    - -c
    - |
      gcloud deploy releases create rel-${SHORT_SHA} \
      --delivery-pipeline=${_PIPELINE_NAME} \
      --region=us-west1 \
      --annotations=commitId=${REVISION_ID} \
      --images=${_APP_NAME}=$(/bin/cat image-digest.txt)
    waitFor: ['vulnsign']

images:
- ${LOCATION}-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$_APP_NAME:$COMMIT_SHA
options:
  requestedVerifyOption: VERIFIED
  pool:
    name: 'projects/$PROJECT_ID/locations/$LOCATION/workerPools/$_POOL_NAME'